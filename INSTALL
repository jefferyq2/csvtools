

			CSVtools 1.2 Installation Instructions
		    ============================================

------------
Introduction
------------

CSVtools is designed to be configured for compilation on the target system by
a single shell script, named 'configure', located in the top-level directory
of the source distribution.  This script, originally generated by the GNU
autoconf tool, will analyze your system and create a 'config.h' file that
*should* allow CSVtools to compile cleanly.  On some systems it may be necessary
to give certain options to configure or to tweak manually one or both of the
config.h and the top-level Makefile files produced by configure.

Note that a sample RPM spec file has been included in contrib/dist/rpm

If you install CSVtools on a slightly uncommon (or really new or old) platform,
please consider recording and sharing your experience.

------------------
Build Requirements
------------------

        o ANSI/ISO C89/C90 C compiler, e.g. GNU gcc
        o GNU make, though most system makes should work
	o Mysql Libraries for csv2mysql support
	o PostgreSQL Libraries for csv2pgsql support
	o UNIXodbc Libraries for csv2odbc support
	o SQLite Libraries for csv2sqlite support
        o ANSI C and POSIX run-time libraries
	o about 7.7M after unzip and untar 

-------------------------
Installation Instructions
-------------------------

1.  Configure the software.
    Run the GNU autoconf 'configure' script in the top level directory to
    create config.h and all the Makefiles. In addition to configuring
    CSVtools use this script to enable or disable some of the binaries tools
    depending on the option of "--with" or "--without" you are running the
    'configure' command with

	 $ ./configure

    By default the CSVtools creates a single tool for the csv 2 sqlite.
    in case you want to other tools as well you need to make sure you have
    the client and the Libraries installed on your system and the 'configure'
    script with use the build in client tools to complete the necessary CFLAGS
    and CLIBS options.
    In case the Database clients are complied not by the default way you can
    set the relevant path for the include and libraries directories and add the
    PATH variable the right path of the location for the client binary tools.

2.  Configure with MySQL
    to configure the tools with Mysql/MariaDB all you need to do is run the 'configure'
    command with the '--with-mysql' option and the 'configure' will auto complete every
    thing it needs

	$ ./configure --with-mysql

    the 'configure' script checks for the 'mysql_config' to complete the CFLAGS and LIBS it
    requires for compilation, please make sure the command is available in the root user PATH

3.  Configure with PostgreSQL
    to enable PostgreSQL insert binary tool just run the 'configure' script with the option
    of '--with-pgsql' and the 'configure' script will create the CFLAGS and the LIBS 
    it needs for comlipation

	$ ./configure --with-pgsql

    before you run the 'configure' script please make sure that the binary 'pg_config' is
    available to the compliation user and that the postgresql libs are available.

4.  Configure with UNIXodbc
    to configure the tools with UNIXodbc all you need to do is run the 'configure' 
    command with the option of '--with-odbc' and the 'configure' script will auto 
    complete all the necessary flags for compilation.

	$ ./configure --with-odbc

5.  Compiling all the Tools.
    to make all of the CSVtools available upon compilation run the 'configure' command
    with all of the 'with' available arguments

	$ ./configure --with-odbc --with-mysql --with-pgsql


6.  All the Autotools Rules Apply
    If you want to change the directory of the bin/ installation path or a new directory
    for the libraries you can use the 'configure --help' command to see what options are
    available for you convenience.

Good luck!


Repositories
-------------

	GIT repository:
	https://github.com/ooichman/csvtools.git

